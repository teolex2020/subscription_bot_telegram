from aiogram import Router, F
from aiogram.types import PreCheckoutQuery, Message, LabeledPrice
from aiogram.exceptions import TelegramAPIError
from config import PAYMENT_PROVIDER_TOKEN, CURRENCY, BOT_TOKEN
from bot.utils.logger import logger

router = Router()

@router.message(F.text == "/subscribe")
async def send_invoice(message: Message):

    try:
        chat_id = message.chat.id
        logger.info(f"üîé –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ chat_id: {chat_id}")

        prices = [LabeledPrice(label="–ü—ñ–¥–ø–∏—Å–∫–∞", amount=50000)]
        await message.bot.send_invoice(
            chat_id=chat_id,
            title="–ü—ñ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∫–æ–Ω—Ç–µ–Ω—Ç",
            description="–û—Ç—Ä–∏–º–∞–π—Ç–µ –¥–æ—Å—Ç—É–ø –¥–æ –ø—Ä–µ–º—ñ—É–º-–∫–æ–Ω—Ç–µ–Ω—Ç—É –Ω–∞ –º—ñ—Å—è—Ü—å.",
            payload="subscription",
            provider_token=PAYMENT_PROVIDER_TOKEN,
            currency="UAH",
            prices=prices,
            start_parameter="subscription-start"
        )
        logger.info(f"üì© –Ü–Ω–≤–æ–π—Å –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {message.from_user.id} –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∏–π!")
    except TelegramAPIError as e:
        logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—ñ —ñ–Ω–≤–æ–π—Å—É: {e}")

@router.pre_checkout_query()
async def pre_checkout_query(pre_checkout_query: PreCheckoutQuery):
    try:
        await pre_checkout_query.answer(ok=True)
    except TelegramAPIError as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–≤—ñ—Ä—Ü—ñ –æ–ø–ª–∞—Ç–∏: {e}")

@router.message(F.successful_payment)
async def successful_payment(message: Message):
    try:
        await message.answer("‚úÖ –ü—ñ–¥–ø–∏—Å–∫–∞ —É—Å–ø—ñ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞!")
        logger.info(f"‚úÖ –û–ø–ª–∞—Ç–∞ –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {message.from_user.id} –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–∞!")
    except TelegramAPIError as e:
        logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—ñ –æ–ø–ª–∞—Ç–∏: {e}")